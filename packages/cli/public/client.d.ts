/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auditlog/list": {
    /** list audit log */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.auditapi.ListAuditLogReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []entity.SysAuditLog */
                rows?: components["schemas"]["container-drift-service.internal.model.entity.SysAuditLog"][];
                pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
              };
            };
          };
        };
      };
    };
  };
  "/check": {
    /** HealthCheck */
    get: {
      responses: {
        200: {
          content: {
            "text/html": components["schemas"]["container-drift-service.api.v1.HelloRes"];
          };
        };
      };
    };
  };
  "/kube/killpod": {
    /** kill pod */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeapi.KillPodReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: Record<string, never>;
            };
          };
        };
      };
    };
  };
  "/kube/listnamespace": {
    /** list kube namespace */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeapi.ListNamespaceReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []string */
                namespaces?: string[];
              };
            };
          };
        };
      };
    };
  };
  "/kube/listnodes": {
    /** list kube node */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeapi.ListNodesReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []model.NodeInfluxInfo */
                nodes_info?: components["schemas"]["container-drift-service.internal.model.NodeInfluxInfo"][];
              };
            };
          };
        };
      };
    };
  };
  "/kube/listpods": {
    /** list kube pod */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeapi.ListPodsReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []model.PodInfluxInfo */
                pods_info?: components["schemas"]["container-drift-service.internal.model.PodInfluxInfo"][];
              };
            };
          };
        };
      };
    };
  };
  "/kube/nodemetrics": {
    /** node metrics */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeapi.QueryNodeMetricsReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []model.NodeMetricData */
                metrics?: components["schemas"]["container-drift-service.internal.model.NodeMetricData"][];
              };
            };
          };
        };
      };
    };
  };
  "/kube/podmetrics": {
    /** pod metrics */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeapi.QueryPodMetricsReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []model.PodMetricData */
                metrics?: components["schemas"]["container-drift-service.internal.model.PodMetricData"][];
              };
            };
          };
        };
      };
    };
  };
  "/kube/transpod": {
    /** trans pod to new node */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeapi.TransPodReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: Record<string, never>;
            };
          };
        };
      };
    };
  };
  "/kube/v2/listavailablenodes": {
    /** List Available Nodes */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v2.kubeapi.ListAvailableNodesReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []string */
                nodes?: string[];
              };
            };
          };
        };
      };
    };
  };
  "/kube/v2/listnodes": {
    /** [new]list kube node V2 */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v2.kubeapi.ListNodesV2Req"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []model.NodeItem */
                nodes?: components["schemas"]["container-drift-service.internal.model.NodeItem"][];
                /** Format: string */
                start_suggestion?: string;
              };
            };
          };
        };
      };
    };
  };
  "/kube/v2/listpods": {
    /** [new]list kube pods V2 */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v2.kubeapi.ListPodsV2Req"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []model.PodItem */
                pods?: components["schemas"]["container-drift-service.internal.model.PodItem"][];
              };
            };
          };
        };
      };
    };
  };
  "/kubeconfig/delete": {
    /** delete kubeconfig */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeconfigapi.DeleteConfigReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: Record<string, never>;
            };
          };
        };
      };
    };
  };
  "/kubeconfig/list": {
    /** list kubeconfig */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeconfigapi.ListConfigReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []entity.BizKubeConfig */
                rows?: components["schemas"]["container-drift-service.internal.model.entity.BizKubeConfig"][];
                pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
              };
            };
          };
        };
      };
    };
  };
  "/kubeconfig/save": {
    /** save kubeconfig */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.kubeconfigapi.SaveConfigReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: Record<string, never>;
            };
          };
        };
      };
    };
  };
  "/sysconfig/get": {
    /** get sysconfig */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.sysconfigapi.GetSysConfigReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []entity.SysConfig */
                configs?: components["schemas"]["container-drift-service.internal.model.entity.SysConfig"][];
              };
            };
          };
        };
      };
    };
  };
  "/sysconfig/save": {
    /** save sysconfig */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.sysconfigapi.SetSysConfigReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: Record<string, never>;
            };
          };
        };
      };
    };
  };
  "/user/list": {
    /** get user list */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.userapi.UserListReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: []*entity.SysUser */
                rows?: components["schemas"]["container-drift-service.internal.model.entity.SysUser"][];
                pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
              };
            };
          };
        };
      };
    };
  };
  "/user/login": {
    /** user login */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.userapi.UserLoginReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: string */
                token?: string;
              };
            };
          };
        };
      };
    };
  };
  "/user/logout": {
    /** user logout by token */
    get: {
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: Record<string, never>;
            };
          };
        };
      };
    };
  };
  "/user/profile": {
    /** get user profile by Header Token */
    get: {
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: int64 */
                id?: number;
                /** Format: string */
                name?: string;
                /** Format: string */
                nick_name?: string;
                /** Format: string */
                phone?: string;
                /** Format: string */
                email?: string;
                /**
                 * Format: int
                 * @description 0 system 1 ldap
                 */
                type?: number;
                /** Format: int */
                deleted?: number;
                /** Format: int */
                disabled?: number;
                /** Format: *gtime.Time */
                created_at?: string;
                /** Format: *gtime.Time */
                updated_at?: string;
                /** Format: string */
                passwd?: string;
              };
            };
          };
        };
      };
    };
  };
  "/user/save": {
    /** create user */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["container-drift-service.api.v1.userapi.SaveUserReq"];
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              /**
               * Format: int
               * @description Error code
               */
              code?: number;
              /**
               * Format: string
               * @description Error message
               */
              message?: string;
              /** @description Result data for certain request according API definition */
              data?: {
                /** Format: int64 */
                user_id?: number;
                /** Format: bool */
                ok?: boolean;
              };
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "container-drift-service.api.v1.auditapi.ListAuditLogReq": {
      /** Format: string */
      user_name?: string;
      /** Format: string */
      remote_ip?: string;
      /** Format: string */
      module?: string;
      /** Format: string */
      operation?: string;
      /** Format: string */
      status?: string;
      /** Format: string */
      start_time?: string;
      /** Format: string */
      end_time?: string;
      pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
    };
    "container-drift-service.utils.pagi.Pagination": {
      /** Format: int */
      page_rows?: number;
      /** Format: int */
      page_no?: number;
      /** Format: int */
      total?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.auditapi.ListAuditLogRes": {
      /** Format: []entity.SysAuditLog */
      rows?: components["schemas"]["container-drift-service.internal.model.entity.SysAuditLog"][];
      pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
    };
    "container-drift-service.internal.model.entity.SysAuditLog": {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      user_id?: number;
      /** Format: string */
      user_name?: string;
      /** Format: string */
      remote_ip?: string;
      /** Format: *gtime.Time */
      created_at?: string;
      /** Format: *gtime.Time */
      updated_at?: string;
      /**
       * Format: string
       * @description login 登录模块 cluster cluster  pod  pod  node node
       */
      module?: string;
      /**
       * Format: string
       * @description login logout ...
       */
      operation?: string;
      /**
       * Format: string
       * @description success fail
       */
      status?: string;
      /** Format: string */
      detail?: string;
    };
    interface: Record<string, never>;
    "container-drift-service.api.v1.HelloReq": Record<string, never>;
    /** @example string */
    "container-drift-service.api.v1.HelloRes": Record<string, never>;
    "container-drift-service.api.v1.kubeapi.KillPodReq": {
      /** Format: string */
      pod_name?: string;
      /** Format: string */
      namespace?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeapi.KillPodRes": Record<string, never>;
    "container-drift-service.api.v1.kubeapi.ListNamespaceReq": {
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeapi.ListNamespaceRes": {
      /** Format: []string */
      namespaces?: string[];
    };
    "container-drift-service.api.v1.kubeapi.ListNodesReq": {
      /** Format: string */
      node_name?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeapi.ListNodesRes": {
      /** Format: []model.NodeInfluxInfo */
      nodes_info?: components["schemas"]["container-drift-service.internal.model.NodeInfluxInfo"][];
    };
    "container-drift-service.internal.model.NodeInfluxInfo": {
      /** Format: string */
      Time?: string;
      /** Format: string */
      Name?: string;
      /** Format: string */
      PodCIDR?: string;
      /** Format: string */
      CreationTimestamp?: string;
      /** Format: string */
      KubeClusterName?: string;
      /** Format: string */
      KubeClusterID?: string;
      /** Format: float64 */
      UsageCpu?: number;
      /** Format: float64 */
      UsageMemory?: number;
      /** Format: float64 */
      AllocatableCpu?: number;
      /** Format: float64 */
      AllocatableMemory?: number;
      /** Format: float64 */
      CpuPercentage?: number;
      /** Format: float64 */
      MemoryPercentage?: number;
      /** Format: string */
      InternalIP?: string;
      /** Format: string */
      Hostname?: string;
      /** Format: string */
      Roles?: string;
      /** Format: float64 */
      MaxUsageMemory?: number;
      /** Format: float64 */
      AvgUsageMemory?: number;
      /** Format: float64 */
      EntropyUsageMemory?: number;
    };
    "container-drift-service.api.v1.kubeapi.ListPodsReq": {
      /** Format: string */
      pod_name?: string;
      /** Format: string */
      node_name?: string;
      /** Format: string */
      namespace?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeapi.ListPodsRes": {
      /** Format: []model.PodInfluxInfo */
      pods_info?: components["schemas"]["container-drift-service.internal.model.PodInfluxInfo"][];
    };
    "container-drift-service.internal.model.PodInfluxInfo": {
      /** Format: string */
      Time?: string;
      /** Format: string */
      Name?: string;
      /** Format: string */
      Namespace?: string;
      /** Format: string */
      CreationTimestamp?: string;
      /** Format: string */
      Kind?: string;
      /** Format: string */
      Phase?: string;
      /** Format: string */
      HostIP?: string;
      /** Format: string */
      PodIP?: string;
      /** Format: string */
      QOSClass?: string;
      /** Format: string */
      DNSPolicy?: string;
      /** Format: string */
      NodeName?: string;
      /** Format: string */
      KubeClusterName?: string;
      /** Format: string */
      KubeClusterID?: string;
      /** Format: float64 */
      UsageCpu?: number;
      /** Format: float64 */
      UsageMemory?: number;
      /** Format: float64 */
      AllocatableCpu?: number;
      /** Format: float64 */
      AllocatableMemory?: number;
      /** Format: float64 */
      CpuPercentage?: number;
      /** Format: float64 */
      MemoryPercentage?: number;
      /** Format: float64 */
      MaxUsageMemory?: number;
      /** Format: float64 */
      AvgUsageMemory?: number;
      /** Format: float64 */
      EntropyUsageMemory?: number;
      /** Format: string */
      AllowClose?: string;
    };
    "container-drift-service.api.v1.kubeapi.QueryNodeMetricsReq": {
      /** Format: string */
      node_name?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeapi.QueryNodeMetricsRes": {
      /** Format: []model.NodeMetricData */
      metrics?: components["schemas"]["container-drift-service.internal.model.NodeMetricData"][];
    };
    "container-drift-service.internal.model.NodeMetricData": {
      /** Format: string */
      CreationTimestamp?: string;
      /** Format: string */
      KubeClusterID?: string;
      /** Format: string */
      KubeClusterName?: string;
      /** Format: string */
      Name?: string;
      /** Format: string */
      PodCIDR?: string;
      /** Format: string */
      InternalIP?: string;
      /** Format: string */
      Hostname?: string;
      /** Format: string */
      Roles?: string;
      /** Format: string */
      _field?: string;
      /** Format: string */
      _measurement?: string;
      /** Format: string */
      _start?: string;
      /** Format: string */
      _stop?: string;
      /** Format: string */
      _time?: string;
      _value?: components["schemas"]["interface"];
      /** Format: string */
      result?: string;
      /** Format: int64 */
      table?: number;
    };
    "container-drift-service.api.v1.kubeapi.QueryPodMetricsReq": {
      /** Format: string */
      pod_name?: string;
      /** Format: string */
      namespace?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeapi.QueryPodMetricsRes": {
      /** Format: []model.PodMetricData */
      metrics?: components["schemas"]["container-drift-service.internal.model.PodMetricData"][];
    };
    "container-drift-service.internal.model.PodMetricData": {
      /** Format: string */
      CreationTimestamp?: string;
      /** Format: string */
      DNSPolicy?: string;
      /** Format: string */
      HostIP?: string;
      /** Format: string */
      KubeClusterID?: string;
      /** Format: string */
      KubeClusterName?: string;
      /** Format: string */
      Name?: string;
      /** Format: string */
      Namespace?: string;
      /** Format: string */
      NodeName?: string;
      /** Format: string */
      Phase?: string;
      /** Format: string */
      PodIP?: string;
      /** Format: string */
      QOSClass?: string;
      /** Format: string */
      _field?: string;
      /** Format: string */
      _measurement?: string;
      /** Format: string */
      _start?: string;
      /** Format: string */
      _stop?: string;
      /** Format: string */
      _time?: string;
      _value?: components["schemas"]["interface"];
      /** Format: string */
      result?: string;
      /** Format: int64 */
      table?: number;
    };
    "container-drift-service.api.v1.kubeapi.TransPodReq": {
      /** Format: string */
      node_name?: string;
      /** Format: string */
      pod_name?: string;
      /** Format: string */
      namespace?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeapi.TransPodRes": Record<string, never>;
    "container-drift-service.api.v2.kubeapi.ListAvailableNodesReq": {
      /** Format: string */
      pod_name?: string;
      /** Format: string */
      namespace?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v2.kubeapi.ListAvailableNodesRes": {
      /** Format: []string */
      nodes?: string[];
    };
    "container-drift-service.api.v2.kubeapi.ListNodesV2Req": {
      /** Format: string */
      node_name?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v2.kubeapi.ListNodesV2Res": {
      /** Format: []model.NodeItem */
      nodes?: components["schemas"]["container-drift-service.internal.model.NodeItem"][];
      /** Format: string */
      start_suggestion?: string;
    };
    "container-drift-service.internal.model.NodeItem": {
      /** Format: string */
      node_name?: string;
      /** Format: string */
      InternalIP?: string;
      /** Format: string */
      Hostname?: string;
      /** Format: string */
      Roles?: string;
      /** Format: string */
      KubeClusterName?: string;
      /** Format: int64 */
      KubeClusterID?: number;
      /** Format: float64 */
      UsageCpu?: number;
      /** Format: float64 */
      UsageMemory?: number;
      /** Format: float64 */
      total_cpu?: number;
      /** Format: float64 */
      total_memory?: number;
      /** Format: float64 */
      current_cpu_percentage?: number;
      /** Format: float64 */
      current_memory_percentage?: number;
      /** Format: float64 */
      cpu_percentage?: number;
      /** Format: float64 */
      memory_percentage?: number;
      /** Format: float64 */
      max_cpu_percentage?: number;
      /** Format: float64 */
      max_memory_percentage?: number;
      /** Format: string */
      status?: string;
      /** Format: float64 */
      score?: number;
      /** Format: string */
      suggestion?: string;
      /** Format: int */
      cpu_rank?: number;
      /** Format: int */
      mem_rank?: number;
      /** Format: int */
      recent_trans_time?: number;
    };
    "container-drift-service.api.v2.kubeapi.ListPodsV2Req": {
      /** Format: string */
      pod_name?: string;
      /** Format: string */
      namespace?: string;
      /** Format: string */
      node_name?: string;
      /** Format: int64 */
      kube_cluster_id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v2.kubeapi.ListPodsV2Res": {
      /** Format: []model.PodItem */
      pods?: components["schemas"]["container-drift-service.internal.model.PodItem"][];
    };
    "container-drift-service.internal.model.PodItem": {
      /** Format: string */
      pod_name?: string;
      /** Format: string */
      namespace?: string;
      /** Format: string */
      KubeClusterName?: string;
      /** Format: int64 */
      KubeClusterID?: number;
      /** Format: string */
      node_name?: string;
      /** Format: string */
      ip?: string;
      /** Format: string */
      status?: string;
      /** Format: float64 */
      current_usage_cpu?: number;
      /** Format: float64 */
      current_usage_memory?: number;
      /** Format: float64 */
      node_total_cpu?: number;
      /** Format: float64 */
      node_total_memory?: number;
      /** Format: float64 */
      current_cpu_percentage?: number;
      /** Format: float64 */
      current_memory_percentage?: number;
      /** Format: float64 */
      EntropyUsageMemory?: number;
      /** Format: float64 */
      EntropyUsageCPU?: number;
      /** Format: float64 */
      cpu_percentage?: number;
      /** Format: float64 */
      memory_percentage?: number;
      /** Format: float64 */
      max_cpu_percentage?: number;
      /** Format: float64 */
      max_memory_percentage?: number;
      /** Format: string */
      suggestion?: string;
    };
    "container-drift-service.api.v1.kubeconfigapi.DeleteConfigReq": {
      /** Format: int64 */
      id?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeconfigapi.DeleteConfigRes": Record<string, never>;
    "container-drift-service.api.v1.kubeconfigapi.ListConfigReq": {
      /** Format: int64 */
      id?: number;
      /** Format: string */
      name?: string;
      /** Format: string */
      addr?: string;
      /** Format: string */
      version?: string;
      pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeconfigapi.ListConfigRes": {
      /** Format: []entity.BizKubeConfig */
      rows?: components["schemas"]["container-drift-service.internal.model.entity.BizKubeConfig"][];
      pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
    };
    "container-drift-service.internal.model.entity.BizKubeConfig": {
      /** Format: int64 */
      id?: number;
      /** Format: string */
      name?: string;
      /** Format: string */
      version?: string;
      /** Format: string */
      auth_type?: string;
      /** Format: string */
      addr?: string;
      /** Format: string */
      user_name?: string;
      /** Format: string */
      passwd?: string;
      /** Format: string */
      config?: string;
      /** Format: int */
      deleted?: number;
      /** Format: int */
      disabled?: number;
      /**
       * Format: *gtime.Time
       * @description Created Time
       */
      create_at?: string;
      /**
       * Format: *gtime.Time
       * @description Updated Time
       */
      update_at?: string;
      /** Format: string */
      node_monitor_addr?: string;
      /** Format: string */
      pod_monitor_addr?: string;
      /**
       * Format: string
       * @description 预留-节点监控配置json
       */
      node_monitor_config?: string;
      /**
       * Format: string
       * @description 预留-Pod监控配置json
       */
      pod_monitor_config?: string;
    };
    "container-drift-service.api.v1.kubeconfigapi.SaveConfigReq": {
      /** Format: int64 */
      id?: number;
      /** Format: string */
      name?: string;
      /** Format: string */
      version?: string;
      /** Format: string */
      auth_type?: string;
      /** Format: string */
      addr?: string;
      /** Format: string */
      user_name?: string;
      /** Format: string */
      passwd?: string;
      /** Format: string */
      config?: string;
      /** Format: int */
      deleted?: number;
      /** Format: int */
      disabled?: number;
      /**
       * Format: *gtime.Time
       * @description Created Time
       */
      create_at?: string;
      /**
       * Format: *gtime.Time
       * @description Updated Time
       */
      update_at?: string;
      /** Format: string */
      node_monitor_addr?: string;
      /** Format: string */
      pod_monitor_addr?: string;
      /**
       * Format: string
       * @description 预留-节点监控配置json
       */
      node_monitor_config?: string;
      /**
       * Format: string
       * @description 预留-Pod监控配置json
       */
      pod_monitor_config?: string;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.kubeconfigapi.SaveConfigRes": Record<string, never>;
    "container-drift-service.api.v1.sysconfigapi.GetSysConfigReq": {
      /**
       * Format: string
       * @description config key
       */
      config_key?: string;
      /**
       * Format: string
       * @description config group
       */
      config_group?: string;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.sysconfigapi.GetSysConfigRes": {
      /** Format: []entity.SysConfig */
      configs?: components["schemas"]["container-drift-service.internal.model.entity.SysConfig"][];
    };
    "container-drift-service.internal.model.entity.SysConfig": {
      /** Format: int64 */
      id?: number;
      /**
       * Format: string
       * @description 'email etc...'
       */
      config_key?: string;
      /** Format: string */
      config_key_cn?: string;
      /** Format: string */
      config_value?: string;
      /** Format: string */
      config_value_cn?: string;
      /** Format: int */
      sort?: number;
      /** Format: int */
      deleted?: number;
      /** Format: *gtime.Time */
      created_at?: string;
      /** Format: *gtime.Time */
      updated_at?: string;
      /** Format: string */
      config_group?: string;
    };
    "container-drift-service.api.v1.sysconfigapi.SetSysConfigReq": {
      /** Format: []entity.SysConfig */
      configs?: components["schemas"]["container-drift-service.internal.model.entity.SysConfig"][];
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.sysconfigapi.SetSysConfigRes": Record<string, never>;
    "container-drift-service.api.v1.userapi.UserListReq": {
      pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.userapi.UserListRes": {
      /** Format: []*entity.SysUser */
      rows?: components["schemas"]["container-drift-service.internal.model.entity.SysUser"][];
      pagination?: components["schemas"]["container-drift-service.utils.pagi.Pagination"];
    };
    "container-drift-service.internal.model.entity.SysUser": {
      /** Format: int64 */
      id?: number;
      /** Format: string */
      name?: string;
      /** Format: string */
      nick_name?: string;
      /** Format: string */
      phone?: string;
      /** Format: string */
      email?: string;
      /**
       * Format: int
       * @description 0 system 1 ldap
       */
      type?: number;
      /** Format: int */
      deleted?: number;
      /** Format: int */
      disabled?: number;
      /** Format: *gtime.Time */
      created_at?: string;
      /** Format: *gtime.Time */
      updated_at?: string;
      /** Format: string */
      passwd?: string;
    };
    "container-drift-service.api.v1.userapi.UserLoginReq": {
      /** Format: string */
      user_name: string;
      /** Format: string */
      passwd: string;
      /**
       * Format: int
       * @description 0 username  1 ldap
       */
      type: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.userapi.UserLoginRes": {
      /** Format: string */
      token?: string;
    };
    "container-drift-service.api.v1.userapi.UserLogoutReq": Record<string, never>;
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.userapi.UserLogoutRes": Record<string, never>;
    "container-drift-service.api.v1.userapi.UserProfileReq": Record<string, never>;
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.userapi.UserProfileRes": {
      /** Format: int64 */
      id?: number;
      /** Format: string */
      name?: string;
      /** Format: string */
      nick_name?: string;
      /** Format: string */
      phone?: string;
      /** Format: string */
      email?: string;
      /**
       * Format: int
       * @description 0 system 1 ldap
       */
      type?: number;
      /** Format: int */
      deleted?: number;
      /** Format: int */
      disabled?: number;
      /** Format: *gtime.Time */
      created_at?: string;
      /** Format: *gtime.Time */
      updated_at?: string;
      /** Format: string */
      passwd?: string;
    };
    "container-drift-service.api.v1.userapi.SaveUserReq": {
      /**
       * Format: int64
       * @description needed if update user info
       */
      user_id?: number;
      /** Format: string */
      user_name?: string;
      /** Format: string */
      nick_name?: string;
      /** Format: string */
      passwd?: string;
      /** Format: string */
      passwd_2?: string;
      /** Format: string */
      phone?: string;
      /** Format: string */
      email?: string;
      /**
       * Format: int
       * @description 0 username 1 ldap
       */
      type?: number;
    };
    /** @description Result data for certain request according API definition */
    "container-drift-service.api.v1.userapi.SaveUserRes": {
      /** Format: int64 */
      user_id?: number;
      /** Format: bool */
      ok?: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
